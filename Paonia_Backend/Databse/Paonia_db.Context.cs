//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Paonia_Backend.Databse
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PaoniaEntities : DbContext
    {
        public PaoniaEntities()
            : base("name=PaoniaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<EmployeeLeaf> EmployeeLeaves { get; set; }
    
        public virtual int AddUpdateEmployeeDetails(Nullable<int> id, string employeeId, string firstName, string middleName, string lastname, Nullable<System.DateTime> dateofBirth, Nullable<int> age, Nullable<System.DateTime> joiningDate, string identificationNumberType, string identificationNumber, string gender, string password, string personalEmailID, string contactNumber, string companyEmailID, string emergencyContactName, string emergencyContactNumber, string designation, string employeeType, string isActive, ObjectParameter statusCode, ObjectParameter statusMessage)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var dateofBirthParameter = dateofBirth.HasValue ?
                new ObjectParameter("DateofBirth", dateofBirth) :
                new ObjectParameter("DateofBirth", typeof(System.DateTime));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var joiningDateParameter = joiningDate.HasValue ?
                new ObjectParameter("JoiningDate", joiningDate) :
                new ObjectParameter("JoiningDate", typeof(System.DateTime));
    
            var identificationNumberTypeParameter = identificationNumberType != null ?
                new ObjectParameter("IdentificationNumberType", identificationNumberType) :
                new ObjectParameter("IdentificationNumberType", typeof(string));
    
            var identificationNumberParameter = identificationNumber != null ?
                new ObjectParameter("IdentificationNumber", identificationNumber) :
                new ObjectParameter("IdentificationNumber", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var personalEmailIDParameter = personalEmailID != null ?
                new ObjectParameter("PersonalEmailID", personalEmailID) :
                new ObjectParameter("PersonalEmailID", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var companyEmailIDParameter = companyEmailID != null ?
                new ObjectParameter("CompanyEmailID", companyEmailID) :
                new ObjectParameter("CompanyEmailID", typeof(string));
    
            var emergencyContactNameParameter = emergencyContactName != null ?
                new ObjectParameter("EmergencyContactName", emergencyContactName) :
                new ObjectParameter("EmergencyContactName", typeof(string));
    
            var emergencyContactNumberParameter = emergencyContactNumber != null ?
                new ObjectParameter("EmergencyContactNumber", emergencyContactNumber) :
                new ObjectParameter("EmergencyContactNumber", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var employeeTypeParameter = employeeType != null ?
                new ObjectParameter("EmployeeType", employeeType) :
                new ObjectParameter("EmployeeType", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUpdateEmployeeDetails", idParameter, employeeIdParameter, firstNameParameter, middleNameParameter, lastnameParameter, dateofBirthParameter, ageParameter, joiningDateParameter, identificationNumberTypeParameter, identificationNumberParameter, genderParameter, passwordParameter, personalEmailIDParameter, contactNumberParameter, companyEmailIDParameter, emergencyContactNameParameter, emergencyContactNumberParameter, designationParameter, employeeTypeParameter, isActiveParameter, statusCode, statusMessage);
        }
    
        public virtual ObjectResult<Login_Result> Login(string employeeId, string password)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Result>("Login", employeeIdParameter, passwordParameter);
        }
    
        public virtual int AddUpdateEmployeeLeaveRequest(Nullable<int> id, string employeeId, string firstName, string middleName, string lastName, string senderEmailID, string password, string phoneNumber, string receiverName, string receiverEmailID, Nullable<System.DateTime> leaveStart, Nullable<System.DateTime> leaveEnd, string leaveType, string description, string status, ObjectParameter statusCode, ObjectParameter statusMessage)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var senderEmailIDParameter = senderEmailID != null ?
                new ObjectParameter("SenderEmailID", senderEmailID) :
                new ObjectParameter("SenderEmailID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var receiverNameParameter = receiverName != null ?
                new ObjectParameter("ReceiverName", receiverName) :
                new ObjectParameter("ReceiverName", typeof(string));
    
            var receiverEmailIDParameter = receiverEmailID != null ?
                new ObjectParameter("ReceiverEmailID", receiverEmailID) :
                new ObjectParameter("ReceiverEmailID", typeof(string));
    
            var leaveStartParameter = leaveStart.HasValue ?
                new ObjectParameter("LeaveStart", leaveStart) :
                new ObjectParameter("LeaveStart", typeof(System.DateTime));
    
            var leaveEndParameter = leaveEnd.HasValue ?
                new ObjectParameter("LeaveEnd", leaveEnd) :
                new ObjectParameter("LeaveEnd", typeof(System.DateTime));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUpdateEmployeeLeaveRequest", idParameter, employeeIdParameter, firstNameParameter, middleNameParameter, lastNameParameter, senderEmailIDParameter, passwordParameter, phoneNumberParameter, receiverNameParameter, receiverEmailIDParameter, leaveStartParameter, leaveEndParameter, leaveTypeParameter, descriptionParameter, statusParameter, statusCode, statusMessage);
        }
    
        public virtual ObjectResult<GetAllEmployees_Result> GetAllEmployees(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmployees_Result>("GetAllEmployees", idParameter);
        }
    
        public virtual ObjectResult<GetEmployeeLeavesListByEmpId_Result> GetEmployeeLeavesListByEmpId(string employeeId)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeLeavesListByEmpId_Result>("GetEmployeeLeavesListByEmpId", employeeIdParameter);
        }
    
        public virtual ObjectResult<GetEmployeeLeavesListById_Result> GetEmployeeLeavesListById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeLeavesListById_Result>("GetEmployeeLeavesListById", idParameter);
        }
    
        public virtual ObjectResult<GetLeaveReceiverList_Result> GetLeaveReceiverList(string designation)
        {
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveReceiverList_Result>("GetLeaveReceiverList", designationParameter);
        }
    }
}
